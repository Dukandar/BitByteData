# TODO: There is probably a way to simplify this very explicit build matrix.
jobs:
  include:
    - stage: test
      language: swift
      os: osx
      osx_image: xcode10.3 # Swift 5.0
      script:
      - swift --version
      - swift build
      - swift test --filter BitByteDataTests
      - swift build -c release # Check Release build just in case.
      - xcodebuild -version
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=OS X" clean test
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=iOS Simulator,name=iPhone 8" clean test
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=watchOS Simulator,name=Apple Watch Series 4 - 44mm" clean build
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=tvOS Simulator,name=Apple TV" clean test
    - stage: test
      language: swift
      os: osx
      osx_image: xcode11.3 # Swift 5.1
      script:
      - swift --version
      - swift build
      - swift test --filter BitByteDataTests
      - swift build -c release # Check Release build just in case.
      - xcodebuild -version
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=OS X" clean test
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=iOS Simulator,name=iPhone 8" clean test
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=watchOS Simulator,name=Apple Watch Series 4 - 44mm" clean build
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=tvOS Simulator,name=Apple TV" clean test
    - stage: test
      language: swift
      os: osx
      osx_image: xcode11.4 # Swift 5.2
      script:
      - swift --version
      - swift build
      - swift test --filter BitByteDataTests
      - swift build -c release # Check Release build just in case.
      - xcodebuild -version
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=OS X" clean test
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=iOS Simulator,name=iPhone 8" clean test
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=watchOS Simulator,name=Apple Watch Series 4 - 44mm" clean build
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=tvOS Simulator,name=Apple TV" clean test
    - stage: test
      language: swift
      os: osx
      osx_image: xcode12.4 # Swift 5.3
      script:
      - swift --version
      - swift build
      - swift test --filter BitByteDataTests
      - swift build -c release # Check Release build just in case.
      - xcodebuild -version
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=OS X" clean test
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=iOS Simulator,name=iPhone 8" clean test
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=watchOS Simulator,name=Apple Watch Series 6 - 44mm" clean build
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=tvOS Simulator,name=Apple TV" clean test
    - stage: test
      language: swift
      os: osx
      osx_image: xcode12.5 # Swift 5.4
      script:
      - swift --version
      - swift build
      - swift test --filter BitByteDataTests
      - swift build -c release # Check Release build just in case.
      - xcodebuild -version
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=OS X" clean test
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=iOS Simulator,name=iPhone 8" clean test
      # Since Xcode 12.5 watchos supports testing.
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=watchOS Simulator,name=Apple Watch Series 6 - 44mm" clean test
      - xcodebuild -quiet -project BitByteData.xcodeproj -scheme BitByteData -destination "platform=tvOS Simulator,name=Apple TV" clean test
    - stage: test
      language: generic
      os: linux
      dist: bionic
      env:
      - SWIFT_VERSION=5.0.3
      install:
      - eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      script:
      - swift --version
      - swift build
      - swift test --filter BitByteDataTests
      - swift build -c release # Check Release build just in case.
    - stage: test
      language: generic
      os: linux
      dist: bionic
      env:
      - SWIFT_VERSION=5.1.5
      install:
      - eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      script:
      - swift --version
      - swift build
      - swift test --filter BitByteDataTests
      - swift build -c release # Check Release build just in case.
    - stage: test
      language: generic
      os: linux
      dist: bionic
      env:
      - SWIFT_VERSION=5.2.5
      install:
      - eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      script:
      - swift --version
      - swift build
      - swift test --filter BitByteDataTests
      - swift build -c release # Check Release build just in case.
    - stage: test
      language: generic
      os: linux
      dist: bionic
      env:
      - SWIFT_VERSION=5.3.3
      install:
      - eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      script:
      - swift --version
      - swift build
      - swift test --filter BitByteDataTests
      - swift build -c release # Check Release build just in case.
    # - stage: test
    #   language: generic
    #   os: linux
    #   dist: bionic
    #   env:
    #   - SWIFT_VERSION=5.4
    #   install:
    #   - eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
    #   script:
    #   - swift --version
    #   - swift build
    #   - swift test --filter BitByteDataTests
    #   - swift build -c release # Check Release build just in case.
    - stage: deploy
      # Don't deploy if it is a test release.
      if: (tag IS present) AND (tag =~ /^\d+\.\d+\.\d+$/)
      language: generic
      os: osx
      osx_image: xcode12
      env:
        secure: fmKQgrPRx2iisNPzxDhOTfXPsnQMJxDgIMItVNjl1AKByraOpiDAGVESySvy+vwQqITCB/BfvdkW7smAPcvFJxIPRx1v4J0VY9kGHdnafMw35XY0Vj9soYkzNS4zrUebxY2gWkGM6Q6dgLOGT/9MSEyWqXBTtVz9sLwA7yr3ZI72yZDbcSz3XGa1fFZRVfwv3I+bmuozG7dq7tyqcSKgRZnHg1VvaRdxcaGqSGSUsNu0YLzmNedujNcU+gTXcxMdrXA1eaheHc2pwNA0TDf3KkefJpaVMXrA/Un8e9MaJ1lMnPlIiEI3dPTuogtQY7p59vgulBNBPEJovTHI0jCaNyLUkTkHgGcUuOwHqwUIKZCEiiqM1j12sdLo4O2tAdNaNHDtd8D3bCakrdJxXlUWVfjrCwvBB555gd0drRirQgYX+5gGFwnTQE8tOcjK4qUvJaOAouHsnm/DmW+fLJPX76KoU6QOtGJt6PQ92yBgKRhaSg/sQ28WPuCmF2p7BuUSuULxcM2LU5eA5aFxayoZvR2E9uvfFxnFh01iV6clcZo25U03AuxJmuI7Mhl83amj8bm5CRBbuRw5sIljXfBujFUel+kz/HXalS7lStqH9iPyiQvh24WkPzHKNQdjRI7v3kyrVSXJ3Xl6+fopXqr/25MwqD4bt57QgglJ2IQtnLM=
      addons:
        homebrew:
          packages:
          - sourcekitten
          update: true
      install:
      - gem install -N jazzy
      - gem update -N cocoapods
      before_deploy:
      - sourcekitten doc --spm --module-name BitByteData > docs.json
      - jazzy
      deploy:
      - provider: pages
        github_token: $GITHUB_TOKEN
        local_dir: docs
        skip_cleanup: true
        on:
          tags: true
